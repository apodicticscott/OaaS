package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.80

import (
	"context"
	"fmt"

	"github.com/apodicticscott/oaas/graph"
	"github.com/apodicticscott/oaas/graph/generated"
)

// CreateSubstance is the resolver for the createSubstance field.
func (r *mutationResolver) CreateSubstance(ctx context.Context, name string, kind string, essence string) (*graph.Substance, error) {
	panic(fmt.Errorf("not implemented: CreateSubstance - createSubstance"))
}

// AddCause is the resolver for the addCause field.
func (r *mutationResolver) AddCause(ctx context.Context, fromEntity string, toEntity string, causeType string) (*graph.CausalRelation, error) {
	panic(fmt.Errorf("not implemented: AddCause - addCause"))
}

// Substance is the resolver for the substance field.
func (r *queryResolver) Substance(ctx context.Context, id string) (*graph.Substance, error) {
	panic(fmt.Errorf("not implemented: Substance - substance"))
}

// Substances is the resolver for the substances field.
func (r *queryResolver) Substances(ctx context.Context) ([]graph.Substance, error) {
	panic(fmt.Errorf("not implemented: Substances - substances"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
